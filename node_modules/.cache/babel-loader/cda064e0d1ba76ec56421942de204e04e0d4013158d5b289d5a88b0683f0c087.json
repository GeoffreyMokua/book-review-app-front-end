{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Documents/ph4/book-review-app-front-end/src/components/login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport login from '../login/login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // const [ username, setUsername ] = useState('')\n  // const [ password, setPassword ] = useState(\"\")\n  const [formData, setFormData] = useState({\n    username: '',\n    password: \"\"\n  });\n  function handleLogin(e) {\n    e.preventDefault();\n    // fetch url from backend\n    // Make a post request to the server\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(r => r.json()).then(d => {\n      console.log(d);\n    });\n    console.log(password);\n    console.log(username);\n  }\n  const {\n    username,\n    password\n  } = formData;\n  // function handleChange(e){\n  //   console.log(e.target.name)\n  //   setFormData({...formData, [e.target.name] : [e.target.value]})\n  // }\n  return (\n    /*#__PURE__*/\n    //   <form onSubmit={handleLogin}>\n    //   <label>\n    //     Username: <input type=\"text\" value={formData.username} onChange={(e) => handleChange(e)}/>\n    //   </label>\n    //   <label>\n    //     Password : <input type=\"password\" value={formData.password} onChange={(e) => handleChange(e)} />\n    //   </label>\n    //   <input type=\"submit\" />\n    // </form>\n    _jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.username,\n          onChange: e => setFormData({\n            ...formData,\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: formData.password,\n          onChange: e => setFormData({\n            ...formData,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n    // <form onSubmit={handleLogin}>\n    //   <label>\n    //     Username: <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)}/>\n    //   </label>\n    //   <label>\n    //     Password : <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n    //   </label>\n    //   <input type=\"submit\" />\n    // </form>\n  );\n}\n_s(Login, \"u6sYY8mmNNDobtipG7ZOmz50mwM=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","login","Login","formData","setFormData","username","password","handleLogin","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","d","console","log","target","value"],"sources":["/home/moringa/Documents/ph4/book-review-app-front-end/src/components/login/Login.js"],"sourcesContent":["import React, { useState } from 'react'\nimport login from '../login/login.css'\nfunction Login(){\n  // const [ username, setUsername ] = useState('')\n  // const [ password, setPassword ] = useState(\"\")\n  const [ formData , setFormData ] = useState({\n    username: '',\n    password: \"\"\n  })\n  function handleLogin(e){\n    e.preventDefault()\n    // fetch url from backend\n    // Make a post request to the server\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type' : 'application/json'\n      },\n      body : JSON.stringify(formData)\n    })\n    .then(r => r.json())\n    .then(d => {\n      console.log(d)\n    })\n    console.log(password)\n    console.log(username)\n  }\n  const { username , password } = formData\n  // function handleChange(e){\n  //   console.log(e.target.name)\n  //   setFormData({...formData, [e.target.name] : [e.target.value]})\n  // }\n  return(\n  //   <form onSubmit={handleLogin}>\n  //   <label>\n  //     Username: <input type=\"text\" value={formData.username} onChange={(e) => handleChange(e)}/>\n  //   </label>\n  //   <label>\n  //     Password : <input type=\"password\" value={formData.password} onChange={(e) => handleChange(e)} />\n  //   </label>\n  //   <input type=\"submit\" />\n  // </form>\n    <form onSubmit={handleLogin}>\n      <label>\n        Username: <input type=\"text\" value={formData.username} onChange={(e) => setFormData({...formData, username: e.target.value})}/>\n      </label>\n      <label>\n        Password : <input type=\"password\" value={formData.password} onChange={(e) => setFormData({...formData, password: e.target.value})} />\n      </label>\n      <input type=\"submit\" />\n      \n    </form>\n    // <form onSubmit={handleLogin}>\n    //   <label>\n    //     Username: <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)}/>\n    //   </label>\n    //   <label>\n    //     Password : <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n    //   </label>\n    //   <input type=\"submit\" />\n    // </form>\n  )\n}\nexport default Login"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AAAA;AACtC,SAASC,KAAK,GAAE;EAAA;EACd;EACA;EACA,MAAM,CAAEC,QAAQ,EAAGC,WAAW,CAAE,GAAGJ,QAAQ,CAAC;IAC1CK,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,SAASC,WAAW,CAACC,CAAC,EAAC;IACrBA,CAAC,CAACC,cAAc,EAAE;IAClB;IACA;IACAC,KAAK,CAAC,QAAQ,EAAE;MACdC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAG;MACnB,CAAC;MACDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACZ,QAAQ;IAChC,CAAC,CAAC,CACDa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,EAAE,CAAC,CACnBF,IAAI,CAACG,CAAC,IAAI;MACTC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAChB,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAACf,QAAQ,CAAC;IACrBc,OAAO,CAACC,GAAG,CAAChB,QAAQ,CAAC;EACvB;EACA,MAAM;IAAEA,QAAQ;IAAGC;EAAS,CAAC,GAAGH,QAAQ;EACxC;EACA;EACA;EACA;EACA;IAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACE;MAAM,QAAQ,EAAEI,WAAY;MAAA,wBAC1B;QAAA,sCACY;UAAO,IAAI,EAAC,MAAM;UAAC,KAAK,EAAEJ,QAAQ,CAACE,QAAS;UAAC,QAAQ,EAAGG,CAAC,IAAKJ,WAAW,CAAC;YAAC,GAAGD,QAAQ;YAAEE,QAAQ,EAAEG,CAAC,CAACc,MAAM,CAACC;UAAK,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACzH,eACR;QAAA,uCACa;UAAO,IAAI,EAAC,UAAU;UAAC,KAAK,EAAEpB,QAAQ,CAACG,QAAS;UAAC,QAAQ,EAAGE,CAAC,IAAKJ,WAAW,CAAC;YAAC,GAAGD,QAAQ;YAAEG,QAAQ,EAAEE,CAAC,CAACc,MAAM,CAACC;UAAK,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/H,eACR;QAAO,IAAI,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;IAGzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAEJ;AAAC,GA5DQrB,KAAK;AAAA,KAALA,KAAK;AA6Dd,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}